"use strict";(self.webpackChunkchicago_crashes_pipeline_docs=self.webpackChunkchicago_crashes_pipeline_docs||[]).push([[910],{6328:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"architecture/services","title":"Services & Modules","description":"Deep dive into the internal services, modules, and execution flow.","source":"@site/docs/architecture/services.md","sourceDirName":"architecture","slug":"/architecture/services","permalink":"/documentation/architecture/services","draft":false,"unlisted":false,"editUrl":"https://github.com/MisterClean/chicago-crashes-pipeline/tree/main/docs/architecture/services.md","tags":[],"version":"current","lastUpdatedAt":null,"sidebarPosition":2,"frontMatter":{"title":"Services & Modules","sidebar_position":2,"description":"Deep dive into the internal services, modules, and execution flow."},"sidebar":"guideSidebar","previous":{"title":"System Overview","permalink":"/documentation/architecture/overview"},"next":{"title":"Data Catalog & Schema Reference","permalink":"/documentation/data-catalog/data-model"}}');var r=i(4848),c=i(8453);const t={title:"Services & Modules",sidebar_position:2,description:"Deep dive into the internal services, modules, and execution flow."},o=void 0,l={},a=[{value:"Data Ingestion Flow",id:"data-ingestion-flow",level:2},{value:"Job Scheduler",id:"job-scheduler",level:2},{value:"REST API",id:"rest-api",level:2},{value:"Spatial Capabilities",id:"spatial-capabilities",level:2},{value:"Command Line Interface",id:"command-line-interface",level:2},{value:"Logging &amp; Observability",id:"logging--observability",level:2}];function d(e){const s={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"data-ingestion-flow",children:"Data Ingestion Flow"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["SODA Client (",(0,r.jsx)(s.code,{children:"src/etl/soda_client.py"}),")"]})," \u2013 wraps HTTP access to the Chicago Open Data API with retry logic, pagination, and rate limiting aligned with ",(0,r.jsx)(s.code,{children:"config/config.yaml"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Data Sanitizer (",(0,r.jsx)(s.code,{children:"src/validators/data_sanitizer.py"}),")"]})," \u2013 normalises raw payloads, converts numeric fields, constrains geographic bounds, and strips invalid values."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Crash Validator (",(0,r.jsx)(s.code,{children:"src/validators/crash_validator.py"}),")"]})," \u2013 enforces domain rules for crash records (age ranges, coordinate bounds, enumerations) and surfaces warnings vs. hard errors."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Sync Service (",(0,r.jsx)(s.code,{children:"src/services/sync_service.py"}),")"]})," \u2013 orchestrates ETL runs, persists progress, and streams batches into SQLAlchemy bulk loaders."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Database Service (",(0,r.jsx)(s.code,{children:"src/services/database_service.py"}),")"]})," \u2013 centralises SQLAlchemy session handling and bulk insert/update helpers, including PostGIS geometry conversions."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"job-scheduler",children:"Job Scheduler"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Scheduled Jobs"})," \u2013 modelled in ",(0,r.jsx)(s.code,{children:"src/models/jobs.py"})," with recurrence types (",(0,r.jsx)(s.code,{children:"once"}),", ",(0,r.jsx)(s.code,{children:"daily"}),", ",(0,r.jsx)(s.code,{children:"weekly"}),", ",(0,r.jsx)(s.code,{children:"cron"}),")."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["JobService (",(0,r.jsx)(s.code,{children:"src/services/job_service.py"}),")"]})," \u2013 CRUD operations, execution history, retry logic, and default job bootstrapping."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Scheduler (",(0,r.jsx)(s.code,{children:"src/services/job_scheduler.py"}),")"]})," \u2013 async loop that evaluates due jobs, coordinates concurrency via Redis locks, and invokes the sync service."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Executions"})," \u2013 tracked with ",(0,r.jsx)(s.code,{children:"JobExecution"})," records containing duration, record counts, and structured log fragments consumed by the admin portal."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"rest-api",children:"REST API"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Entry Point (",(0,r.jsx)(s.code,{children:"src/api/main.py"}),")"]})," \u2013 wires dependency injection, mounts ",(0,r.jsx)(s.code,{children:"/admin"}),", and registers routers."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Routers"})," \u2013 modular endpoints under ",(0,r.jsx)(s.code,{children:"src/api/routers/"})," for health, sync, validation, spatial layers, and job management."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Models (",(0,r.jsx)(s.code,{children:"src/api/models.py"}),")"]})," \u2013 Pydantic schemas providing strong typing for request/response payloads."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"spatial-capabilities",children:"Spatial Capabilities"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["SimpleShapefileLoader (",(0,r.jsx)(s.code,{children:"src/spatial/simple_loader.py"}),")"]})," \u2013 loads shapefiles into PostGIS tables using GeoPandas/Shapely when available."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["SpatialLayerService (",(0,r.jsx)(s.code,{children:"src/services/spatial_layer_service.py"}),")"]})," \u2013 stores custom GeoJSON layers in the database for use in the admin portal."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Admin Portal UI"})," \u2013 integrates shapefile upload, layer activation toggles, and sample queries through ",(0,r.jsx)(s.code,{children:"/spatial"})," endpoints."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"command-line-interface",children:"Command Line Interface"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"src/cli/pipeline.py"})})," \u2013 thin wrapper around the sync service offering ",(0,r.jsx)(s.code,{children:"initial-load"})," and ",(0,r.jsx)(s.code,{children:"delta"})," commands with optional endpoint filtering."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Makefile Targets"})," \u2013 convenience commands (",(0,r.jsx)(s.code,{children:"make sync"}),", ",(0,r.jsx)(s.code,{children:"make initial-load"}),", ",(0,r.jsx)(s.code,{children:"make load-shapefiles"}),") that forward to the CLI or supporting scripts."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"logging--observability",children:"Logging & Observability"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["All modules use ",(0,r.jsx)(s.code,{children:"src.utils.logging"})," to emit JSON structured logs to rotating files (",(0,r.jsx)(s.code,{children:"logs/app.log"}),", ",(0,r.jsx)(s.code,{children:"logs/etl.log"}),", ",(0,r.jsx)(s.code,{children:"logs/api.log"}),")."]}),"\n",(0,r.jsxs)(s.li,{children:["Health checks (",(0,r.jsx)(s.code,{children:"GET /health"}),") verify configuration, SODA connectivity, and database readiness."]}),"\n",(0,r.jsx)(s.li,{children:"Job executions capture timing, record counts, and error logs that surface in the admin portal for lightweight monitoring."}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"This modular approach keeps ingestion, orchestration, and presentation concerns isolated while sharing configuration and logging infrastructure."})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>t,x:()=>o});var n=i(6540);const r={},c=n.createContext(r);function t(e){const s=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);