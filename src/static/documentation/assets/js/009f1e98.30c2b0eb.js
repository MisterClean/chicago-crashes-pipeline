"use strict";(self.webpackChunkchicago_crashes_pipeline_docs=self.webpackChunkchicago_crashes_pipeline_docs||[]).push([[715],{3511:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"getting-started/configuration","title":"Configuration Reference","description":"Understand the environment variables and YAML settings that control the pipeline.","source":"@site/docs/getting-started/configuration.md","sourceDirName":"getting-started","slug":"/getting-started/configuration","permalink":"/documentation/getting-started/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/MisterClean/chicago-crashes-pipeline/tree/main/docs/getting-started/configuration.md","tags":[],"version":"current","lastUpdatedAt":null,"sidebarPosition":2,"frontMatter":{"title":"Configuration Reference","sidebar_position":2,"description":"Understand the environment variables and YAML settings that control the pipeline."},"sidebar":"guideSidebar","previous":{"title":"Quick Start","permalink":"/documentation/getting-started/quickstart"},"next":{"title":"Docker Compose","permalink":"/documentation/getting-started/docker-compose"}}');var s=i(4848),r=i(8453);const a={title:"Configuration Reference",sidebar_position:2,description:"Understand the environment variables and YAML settings that control the pipeline."},o=void 0,c={},d=[{value:"Environment Variables",id:"environment-variables",level:2},{value:"<code>config/config.yaml</code>",id:"configconfigyaml",level:2},{value:"API Endpoints",id:"api-endpoints",level:3},{value:"Database",id:"database",level:3},{value:"Sync Engine",id:"sync-engine",level:3},{value:"Validation Rules",id:"validation-rules",level:3},{value:"Spatial Data",id:"spatial-data",level:3},{value:"Logging &amp; Monitoring",id:"logging--monitoring",level:3},{value:"Reloading Configuration",id:"reloading-configuration",level:2}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The pipeline reads configuration from two sources:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Environment variables"})," \u2013 quick overrides for secrets and runtime tuning"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"config/config.yaml"})})," \u2013 structured configuration committed to the repository"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Both layers are merged through the ",(0,s.jsx)(n.code,{children:"src.utils.config"})," module. Environment variables take precedence over YAML defaults."]}),"\n",(0,s.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:".env"})," file (see ",(0,s.jsx)(n.code,{children:".env.example"}),") and load it before starting the API or CLI. Key values include:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Variable"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"DB_HOST"}),", ",(0,s.jsx)(n.code,{children:"DB_PORT"}),", ",(0,s.jsx)(n.code,{children:"DB_NAME"}),", ",(0,s.jsx)(n.code,{children:"DB_USER"}),", ",(0,s.jsx)(n.code,{children:"DB_PASSWORD"})]}),(0,s.jsx)(n.td,{children:"PostgreSQL connection details used by SQLAlchemy"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CHICAGO_API_TOKEN"})}),(0,s.jsx)(n.td,{children:"Optional token for the SODA API. Greatly increases rate limits"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ENVIRONMENT"})}),(0,s.jsxs)(n.td,{children:["Free-form environment name used in logging (",(0,s.jsx)(n.code,{children:"development"}),", ",(0,s.jsx)(n.code,{children:"staging"}),", ",(0,s.jsx)(n.code,{children:"production"}),", \u2026)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LOG_LEVEL"})}),(0,s.jsxs)(n.td,{children:["Overrides logging level (",(0,s.jsx)(n.code,{children:"DEBUG"}),", ",(0,s.jsx)(n.code,{children:"INFO"}),", ",(0,s.jsx)(n.code,{children:"WARNING"}),", ",(0,s.jsx)(n.code,{children:"ERROR"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"API_HOST"}),", ",(0,s.jsx)(n.code,{children:"API_PORT"})]}),(0,s.jsx)(n.td,{children:"Binds FastAPI when running outside Docker"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["When running under Docker Compose these values can be supplied via ",(0,s.jsx)(n.code,{children:"docker compose --env-file"})," or by editing the service ",(0,s.jsx)(n.code,{children:"environment"})," block."]}),"\n",(0,s.jsx)(n.h2,{id:"configconfigyaml",children:(0,s.jsx)(n.code,{children:"config/config.yaml"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"config/config.yaml"})," contains the full application configuration. Highlights:"]}),"\n",(0,s.jsx)(n.h3,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'api:\n  endpoints:\n    crashes: "https://data.cityofchicago.org/resource/85ca-t3if.json"\n    people: "https://data.cityofchicago.org/resource/u6pd-qa9d.json"\n    vehicles: "https://data.cityofchicago.org/resource/68nd-jvt3.json"\n    fatalities: "https://data.cityofchicago.org/resource/gzaz-isa6.json"\n  rate_limit: 1000   # Requests per hour\n  timeout: 30        # Seconds per HTTP request\n  max_retries: 3\n  backoff_factor: 2\n  batch_size: 50000\n  max_concurrent: 5\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Adjust ",(0,s.jsx)(n.code,{children:"batch_size"})," and ",(0,s.jsx)(n.code,{children:"max_concurrent"})," if you hit API throttling or need to reduce memory pressure."]}),"\n",(0,s.jsx)(n.h3,{id:"database",children:"Database"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"database:\n  host: ${DB_HOST:localhost}\n  port: ${DB_PORT:5432}\n  database: ${DB_NAME:chicago_crashes}\n  username: ${DB_USER:postgres}\n  password: ${DB_PASSWORD:}\n  pool_size: 10\n  max_overflow: 20\n  bulk_insert_size: 1000\n  use_copy: true\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Values wrapped in ",(0,s.jsx)(n.code,{children:"${\u2026}"})," interpolate environment variables with fallbacks. Connection pooling values directly influence SQLAlchemy engine configuration."]}),"\n",(0,s.jsx)(n.h3,{id:"sync-engine",children:"Sync Engine"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'sync:\n  default_start_date: "2017-09-01"\n  sync_interval: 6          # Hours between recurring syncs\n  chunk_size: 50000\n  progress_bar: true\n  log_retention_days: 30\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"default_start_date"})," is used when running the initial backfill from the admin portal or CLI without an explicit range."]}),"\n",(0,s.jsx)(n.h3,{id:"validation-rules",children:"Validation Rules"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'validation:\n  bounds:\n    min_latitude: 41.6\n    max_latitude: 42.1\n    min_longitude: -87.95\n    max_longitude: -87.5\n  age_range:\n    min: 0\n    max: 120\n  vehicle_year_range:\n    min: 1900\n    max: 2025\n  required_fields:\n    crashes: ["crash_record_id", "crash_date"]\n    people: ["crash_record_id", "person_id"]\n    vehicles: ["crash_record_id", "unit_no"]\n    fatalities: ["person_id"]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["These settings are consumed by the ",(0,s.jsx)(n.code,{children:"DataSanitizer"})," and ",(0,s.jsx)(n.code,{children:"CrashValidator"})," classes."]}),"\n",(0,s.jsx)(n.h3,{id:"spatial-data",children:"Spatial Data"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'spatial:\n  shapefiles:\n    wards: "data/shapefiles/chicago_wards.shp"\n    community_areas: "data/shapefiles/community_areas.shp"\n    census_tracts: "data/shapefiles/census_tracts.shp"\n    police_beats: "data/shapefiles/police_beats.shp"\n    house_districts: "data/shapefiles/house_districts.shp"\n    senate_districts: "data/shapefiles/senate_districts.shp"\n  srid: 4326\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The admin portal uploads GeoJSON layers through ",(0,s.jsx)(n.code,{children:"/spatial/layers"}),". Shapefile ingestion uses the paths above."]}),"\n",(0,s.jsx)(n.h3,{id:"logging--monitoring",children:"Logging & Monitoring"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'logging:\n  level: INFO\n  format: json\n  files:\n    app: "logs/app.log"\n    etl: "logs/etl.log"\n    api: "logs/api.log"\n  max_bytes: 10485760\n  backup_count: 5\n\nmonitoring:\n  health_check_timeout: 5\n  enable_metrics: true\n  metrics_port: 9090\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Logs are rotated when the files exceed ",(0,s.jsx)(n.code,{children:"max_bytes"}),". Metrics are exposed via the Prometheus-style endpoint (see ",(0,s.jsx)(n.code,{children:"src/services/metrics_service.py"})," if you extend telemetry)."]}),"\n",(0,s.jsx)(n.h2,{id:"reloading-configuration",children:"Reloading Configuration"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"settings"})," are cached when the application starts. After updating ",(0,s.jsx)(n.code,{children:"config/config.yaml"})," restart the API and any background workers to pick up changes."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);