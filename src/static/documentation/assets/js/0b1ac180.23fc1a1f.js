"use strict";(self.webpackChunkchicago_crashes_pipeline_docs=self.webpackChunkchicago_crashes_pipeline_docs||[]).push([[863],{6264:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"architecture/overview","title":"System Overview","description":"High-level architecture of the Chicago Crash Data Pipeline.","source":"@site/docs/architecture/overview.md","sourceDirName":"architecture","slug":"/architecture/overview","permalink":"/documentation/architecture/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/MisterClean/chicago-crashes-pipeline/tree/main/docs/architecture/overview.md","tags":[],"version":"current","lastUpdatedAt":null,"sidebarPosition":1,"frontMatter":{"title":"System Overview","sidebar_position":1,"description":"High-level architecture of the Chicago Crash Data Pipeline."},"sidebar":"guideSidebar","previous":{"title":"Sync Operations","permalink":"/documentation/user-guides/sync-operations"},"next":{"title":"Services & Modules","permalink":"/documentation/architecture/services"}}');var s=t(4848),r=t(8453);const a={title:"System Overview",sidebar_position:1,description:"High-level architecture of the Chicago Crash Data Pipeline."},o=void 0,c={},l=[];function d(e){const n={code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:'graph TB\n    subgraph Sources\n        CDA["Chicago Data Portal\\n(SODA API)"]\n        Shapefiles["Spatial Shapefiles"]\n    end\n\n    subgraph Pipeline\n        ETL["ETL Service\\nasync fetch + validation"]\n        Sanitizer["Data Sanitizer"]\n        Validator["Crash Validator"]\n        Scheduler["Job Scheduler"]\n    end\n\n    subgraph Services\n        API["FastAPI"]\n        Admin["Admin Portal"]\n        CLI["CLI (src.cli.pipeline)"]\n    end\n\n    subgraph Storage\n        Postgres[("PostgreSQL + PostGIS")]\n        Redis[("Redis Queue State")]\n        Logs[("Structured Logs")]\n    end\n\n    CDA --\x3e ETL\n    Shapefiles --\x3e ETL\n    ETL --\x3e Sanitizer --\x3e Validator --\x3e Postgres\n    Scheduler --\x3e ETL\n    Scheduler --\x3e Redis\n    API --\x3e Postgres\n    API --\x3e Redis\n    Admin --\x3e API\n    CLI --\x3e API\n    CLI --\x3e Postgres\n'})}),"\n",(0,s.jsx)(n.p,{children:"The stack centres around a FastAPI application that exposes health checks, sync controls, job management, and spatial tooling. Batch ingestion jobs run either on demand (via API and CLI) or on a schedule courtesy of an async job scheduler. Data lives in PostgreSQL with PostGIS enabled for spatial analysis."}),"\n",(0,s.jsx)(n.p,{children:"Key characteristics:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Async ETL"})," with rate limiting and batch orchestration for four official Chicago crash datasets."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Admin portal"})," served as static assets (",(0,s.jsx)(n.code,{children:"src/static/admin"}),") mounted at ",(0,s.jsx)(n.code,{children:"/admin"})," for operational visibility."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Job system"})," storing schedules and execution history in the database (",(0,s.jsx)(n.code,{children:"src/models/jobs.py"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Spatial pipeline"})," supporting shapefile ingestion and GeoJSON layer management."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Observability"})," through structured logging, health checks, and Prometheus-friendly metrics hooks."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);