"use strict";(self.webpackChunkchicago_crashes_pipeline_docs=self.webpackChunkchicago_crashes_pipeline_docs||[]).push([[557],{6721:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"data-catalog/data-model","title":"Data Catalog & Schema Reference","description":"Up-to-date table definitions, relationships, and query examples for the Chicago Crash Data pipeline warehouse.","source":"@site/docs/data-catalog/data-model.md","sourceDirName":"data-catalog","slug":"/data-catalog/data-model","permalink":"/documentation/data-catalog/data-model","draft":false,"unlisted":false,"editUrl":"https://github.com/MisterClean/chicago-crashes-pipeline/tree/main/docs/data-catalog/data-model.md","tags":[],"version":"current","lastUpdatedAt":null,"sidebarPosition":1,"frontMatter":{"title":"Data Catalog & Schema Reference","sidebar_position":1,"description":"Up-to-date table definitions, relationships, and query examples for the Chicago Crash Data pipeline warehouse."},"sidebar":"guideSidebar","previous":{"title":"Services & Modules","permalink":"/documentation/architecture/services"},"next":{"title":"Operations Overview","permalink":"/documentation/operations/operations-overview"}}');var c=s(4848),d=s(8453);const r={title:"Data Catalog & Schema Reference",sidebar_position:1,description:"Up-to-date table definitions, relationships, and query examples for the Chicago Crash Data pipeline warehouse."},l=void 0,t={},o=[{value:"Pipeline Tables at a Glance",id:"pipeline-tables-at-a-glance",level:2},{value:"Entity Relationships",id:"entity-relationships",level:2},{value:"Source \u279c Warehouse Mapping",id:"source--warehouse-mapping",level:2},{value:"Table-Level Detail",id:"table-level-detail",level:2},{value:"Crashes (<code>public.crashes</code>)",id:"crashes-publiccrashes",level:3},{value:"People (<code>public.crash_people</code>)",id:"people-publiccrash_people",level:3},{value:"Vehicles (<code>public.crash_vehicles</code>)",id:"vehicles-publiccrash_vehicles",level:3},{value:"Vision Zero Fatalities (<code>public.vision_zero_fatalities</code>)",id:"vision-zero-fatalities-publicvision_zero_fatalities",level:3},{value:"Spatial Reference Tables",id:"spatial-reference-tables",level:2},{value:"Operational Tables",id:"operational-tables",level:2},{value:"Example Queries",id:"example-queries",level:2},{value:"Data Quality Notes",id:"data-quality-notes",level:2},{value:"Usage Recommendations",id:"usage-recommendations",level:2}];function a(e){const i={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(i.blockquote,{children:["\n",(0,c.jsxs)(i.p,{children:[(0,c.jsx)(i.strong,{children:"Validation tip:"})," Confirm schema details against your target warehouse before running analyses; the sample queries below can help spot drift."]}),"\n"]}),"\n",(0,c.jsx)(i.h2,{id:"pipeline-tables-at-a-glance",children:"Pipeline Tables at a Glance"}),"\n",(0,c.jsxs)(i.table,{children:[(0,c.jsx)(i.thead,{children:(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.th,{children:"Table"}),(0,c.jsx)(i.th,{children:"Source Dataset"}),(0,c.jsx)(i.th,{children:"Primary Key"}),(0,c.jsx)(i.th,{children:"Schema Notes"})]})}),(0,c.jsxs)(i.tbody,{children:[(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"public.crashes"})}),(0,c.jsxs)(i.td,{children:["Traffic Crashes \u2013 Crashes (",(0,c.jsx)(i.code,{children:"85ca-t3if"}),")"]}),(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"crash_record_id"})}),(0,c.jsx)(i.td,{children:"Retains portal field names, adds PostGIS geometry and aggregated injury statistics."})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"public.crash_people"})}),(0,c.jsxs)(i.td,{children:["Traffic Crashes \u2013 People (",(0,c.jsx)(i.code,{children:"u6pd-qa9d"}),")"]}),(0,c.jsxs)(i.td,{children:["(",(0,c.jsx)(i.code,{children:"crash_record_id"}),", ",(0,c.jsx)(i.code,{children:"person_id"}),")"]}),(0,c.jsxs)(i.td,{children:["Captures occupants and vulnerable road users; widened driver fields and vehicle linkage via ",(0,c.jsx)(i.code,{children:"vehicle_id"}),"."]})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"public.crash_vehicles"})}),(0,c.jsxs)(i.td,{children:["Traffic Crashes \u2013 Vehicles (",(0,c.jsx)(i.code,{children:"68nd-jvt3"}),")"]}),(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"crash_unit_id"})}),(0,c.jsx)(i.td,{children:"Vehicle/unit roster with normalized descriptors and hazmat flags; indexes support analytics."})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"public.vision_zero_fatalities"})}),(0,c.jsxs)(i.td,{children:["Vision Zero Traffic Fatalities (",(0,c.jsx)(i.code,{children:"gzaz-isa6"}),")"]}),(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"person_id"})}),(0,c.jsx)(i.td,{children:"Fatality subset with pipeline-restored RD numbers and spatial geometry."})]})]})]}),"\n",(0,c.jsx)(i.p,{children:(0,c.jsxs)(i.em,{children:["Use ",(0,c.jsx)(i.code,{children:"SELECT COUNT(*) FROM <table>"})," to inspect current volumes when capacity planning."]})}),"\n",(0,c.jsx)(i.h2,{id:"entity-relationships",children:"Entity Relationships"}),"\n",(0,c.jsx)(i.pre,{children:(0,c.jsx)(i.code,{children:"crashes.crash_record_id (PK)\n\u251c\u2500\u2500 crash_people.crash_record_id (FK)\n\u2514\u2500\u2500 crash_vehicles.crash_record_id (FK)\n\ncrash_vehicles.vehicle_id\n\u2514\u2500\u2500 crash_people.vehicle_id (mul)\n\nvision_zero_fatalities.person_id (PK)\n\u2514\u2500\u2500 crash_people.person_id (subset)\n"})}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:["All spatial analysis should prefer the ",(0,c.jsx)(i.code,{children:"geometry"})," column on ",(0,c.jsx)(i.code,{children:"crashes"})," and ",(0,c.jsx)(i.code,{children:"vision_zero_fatalities"})," instead of lat/long floats."]}),"\n",(0,c.jsxs)(i.li,{children:['Pedestrians and cyclists exist both as vehicle "units" and as people records; downstream analytics should filter on ',(0,c.jsx)(i.code,{children:"unit_type"}),"/",(0,c.jsx)(i.code,{children:"person_type"})," rather than assuming motor vehicles only."]}),"\n"]}),"\n",(0,c.jsx)(i.h2,{id:"source--warehouse-mapping",children:"Source \u279c Warehouse Mapping"}),"\n",(0,c.jsxs)(i.table,{children:[(0,c.jsx)(i.thead,{children:(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.th,{children:"Warehouse Table"}),(0,c.jsx)(i.th,{children:"Source Identifier"}),(0,c.jsx)(i.th,{children:"Transform Highlights"})]})}),(0,c.jsxs)(i.tbody,{children:[(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"crashes"})}),(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"85ca-t3if"})}),(0,c.jsxs)(i.td,{children:["Column names normalized to snake_case; numeric indicators converted to integers; ",(0,c.jsx)(i.code,{children:"geometry"})," populated via ",(0,c.jsx)(i.code,{children:"ST_SetSRID(ST_Point(longitude, latitude), 4326)"}),"; ETL timestamps stored in ",(0,c.jsx)(i.code,{children:"created_at"}),"/",(0,c.jsx)(i.code,{children:"updated_at"}),"."]})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"crash_people"})}),(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"u6pd-qa9d"})}),(0,c.jsxs)(i.td,{children:["Composite key maintained, driver-centric fields widened (",(0,c.jsx)(i.code,{children:"drivers_license_class"}),", ",(0,c.jsx)(i.code,{children:"ems_unit"}),"); includes ",(0,c.jsx)(i.code,{children:"driver_action"})," and ",(0,c.jsx)(i.code,{children:"driver_vision"})," fields from recent portal schema updates."]})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"crash_vehicles"})}),(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"68nd-jvt3"})}),(0,c.jsxs)(i.td,{children:["Vehicle descriptors widened; hazmat flag columns trimmed to core indicators; indexes on ",(0,c.jsx)(i.code,{children:"vehicle_type"}),", ",(0,c.jsx)(i.code,{children:"vehicle_year"}),", and ",(0,c.jsx)(i.code,{children:"make"})," added for analytics."]})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"vision_zero_fatalities"})}),(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"gzaz-isa6"})}),(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"rd_no"})," retained for linkage despite portal deprecation; coordinates normalized; pipeline geometry built for spatial joins."]})]})]})]}),"\n",(0,c.jsx)(i.h2,{id:"table-level-detail",children:"Table-Level Detail"}),"\n",(0,c.jsxs)(i.h3,{id:"crashes-publiccrashes",children:["Crashes (",(0,c.jsx)(i.code,{children:"public.crashes"}),")"]}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Primary key:"})," ",(0,c.jsx)(i.code,{children:"crash_record_id"})]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Indexes:"})," ",(0,c.jsx)(i.code,{children:"crash_date"}),", ",(0,c.jsx)(i.code,{children:"beat_of_occurrence"}),", ",(0,c.jsx)(i.code,{children:"injuries_total"}),", ",(0,c.jsx)(i.code,{children:"injuries_fatal"}),", ",(0,c.jsx)(i.code,{children:"hit_and_run_i"}),", ",(0,c.jsx)(i.code,{children:"GIST(geometry)"}),", composite ",(0,c.jsx)(i.code,{children:"(crash_date, latitude, longitude)"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Refresh cadence:"})," Defined by the incremental jobs in ",(0,c.jsx)(i.code,{children:"scheduled_jobs"}),"; confirm the active window before reporting."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Spatial completeness:"})," Latitude/longitude can be null on a small subset of records; ",(0,c.jsx)(i.code,{children:"geometry"})," is omitted when coordinates are missing."]}),"\n"]}),"\n",(0,c.jsx)(i.p,{children:(0,c.jsx)(i.strong,{children:"Key analytic fields"})}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:["Event timing: ",(0,c.jsx)(i.code,{children:"crash_date"}),", ",(0,c.jsx)(i.code,{children:"date_police_notified"}),", ",(0,c.jsx)(i.code,{children:"crash_date_est_i"})," (indicator when reported after the fact)."]}),"\n",(0,c.jsxs)(i.li,{children:["Location context: ",(0,c.jsx)(i.code,{children:"street_no"}),", ",(0,c.jsx)(i.code,{children:"street_direction"}),", ",(0,c.jsx)(i.code,{children:"street_name"}),", optional second street fields, ",(0,c.jsx)(i.code,{children:"beat_of_occurrence"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Crash descriptors: ",(0,c.jsx)(i.code,{children:"crash_type"}),", ",(0,c.jsx)(i.code,{children:"prim_contributory_cause"}),", ",(0,c.jsx)(i.code,{children:"sec_contributory_cause"}),", ",(0,c.jsx)(i.code,{children:"traffic_control_device"}),", ",(0,c.jsx)(i.code,{children:"device_condition"}),", ",(0,c.jsx)(i.code,{children:"weather_condition"}),", ",(0,c.jsx)(i.code,{children:"lighting_condition"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Injury rollups: ",(0,c.jsx)(i.code,{children:"injuries_total"}),", ",(0,c.jsx)(i.code,{children:"injuries_fatal"}),", ",(0,c.jsx)(i.code,{children:"injuries_incapacitating"}),", ",(0,c.jsx)(i.code,{children:"injuries_non_incapacitating"}),", ",(0,c.jsx)(i.code,{children:"injuries_reported_not_evident"}),", ",(0,c.jsx)(i.code,{children:"injuries_no_indication"}),", ",(0,c.jsx)(i.code,{children:"injuries_unknown"}),", ",(0,c.jsx)(i.code,{children:"most_severe_injury"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Operational flags: ",(0,c.jsx)(i.code,{children:"hit_and_run_i"}),", ",(0,c.jsx)(i.code,{children:"dooring_i"}),", ",(0,c.jsx)(i.code,{children:"intersection_related_i"}),", ",(0,c.jsx)(i.code,{children:"not_right_of_way_i"}),", ",(0,c.jsx)(i.code,{children:"work_zone_i"}),", ",(0,c.jsx)(i.code,{children:"workers_present_i"}),", ",(0,c.jsx)(i.code,{children:"photos_taken_i"}),", ",(0,c.jsx)(i.code,{children:"statements_taken_i"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Roadway conditions: ",(0,c.jsx)(i.code,{children:"posted_speed_limit"}),", ",(0,c.jsx)(i.code,{children:"lane_cnt"}),", ",(0,c.jsx)(i.code,{children:"alignment"}),", ",(0,c.jsx)(i.code,{children:"roadway_surface_cond"}),", ",(0,c.jsx)(i.code,{children:"road_defect"}),", ",(0,c.jsx)(i.code,{children:"damage"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Derived spatial: ",(0,c.jsx)(i.code,{children:"geometry"})," (",(0,c.jsx)(i.code,{children:"POINT"}),", SRID 4326)."]}),"\n",(0,c.jsxs)(i.li,{children:["Pipeline metadata: ",(0,c.jsx)(i.code,{children:"created_at"}),", ",(0,c.jsx)(i.code,{children:"updated_at"})," track ingestion not crash occurrence."]}),"\n"]}),"\n",(0,c.jsxs)(i.blockquote,{children:["\n",(0,c.jsxs)(i.p,{children:["For a full field-by-field reference, consult the ",(0,c.jsx)(i.a,{href:"https://dev.socrata.com/foundry/data.cityofchicago.org/85ca-t3if",children:"Traffic Crashes data dictionary"}),". Column names in the warehouse map directly to the lowercase API field names."]}),"\n"]}),"\n",(0,c.jsxs)(i.h3,{id:"people-publiccrash_people",children:["People (",(0,c.jsx)(i.code,{children:"public.crash_people"}),")"]}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Primary key:"})," (",(0,c.jsx)(i.code,{children:"crash_record_id"}),", ",(0,c.jsx)(i.code,{children:"person_id"}),")"]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Indexes:"})," ",(0,c.jsx)(i.code,{children:"person_type"}),", ",(0,c.jsx)(i.code,{children:"injury_classification"}),", ",(0,c.jsx)(i.code,{children:"age"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Common roles:"})," DRIVER, PASSENGER, BICYCLE, PEDESTRIAN, NON-MOTOR VEHICLE, NON-CONTACT VEHICLE."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Data gaps:"})," ",(0,c.jsx)(i.code,{children:"crash_date"})," is frequently null from the upstream portal; rely on the parent crash record for event timing."]}),"\n"]}),"\n",(0,c.jsx)(i.p,{children:(0,c.jsx)(i.strong,{children:"Key analytic fields"})}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:["Demographics: ",(0,c.jsx)(i.code,{children:"age"}),", ",(0,c.jsx)(i.code,{children:"sex"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Classification: ",(0,c.jsx)(i.code,{children:"person_type"}),", ",(0,c.jsx)(i.code,{children:"injury_classification"}),", ",(0,c.jsx)(i.code,{children:"physical_condition"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Vehicle linkage: ",(0,c.jsx)(i.code,{children:"vehicle_id"})," (ties back to ",(0,c.jsx)(i.code,{children:"crash_vehicles.vehicle_id"}),")."]}),"\n",(0,c.jsxs)(i.li,{children:["Safety indicators: ",(0,c.jsx)(i.code,{children:"safety_equipment"}),", ",(0,c.jsx)(i.code,{children:"airbag_deployed"}),", ",(0,c.jsx)(i.code,{children:"ejection"}),", ",(0,c.jsx)(i.code,{children:"cell_phone_use"}),", ",(0,c.jsx)(i.code,{children:"bac_result"}),", ",(0,c.jsx)(i.code,{children:"bac_result_value"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["EMS routing: ",(0,c.jsx)(i.code,{children:"hospital"}),", ",(0,c.jsx)(i.code,{children:"ems_agency"}),", ",(0,c.jsx)(i.code,{children:"ems_unit"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Driver focus: ",(0,c.jsx)(i.code,{children:"drivers_license_state"}),", ",(0,c.jsx)(i.code,{children:"drivers_license_class"}),", ",(0,c.jsx)(i.code,{children:"driver_action"}),", ",(0,c.jsx)(i.code,{children:"driver_vision"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Pedestrian/cyclist context: ",(0,c.jsx)(i.code,{children:"pedpedal_action"}),", ",(0,c.jsx)(i.code,{children:"pedpedal_visibility"}),", ",(0,c.jsx)(i.code,{children:"pedpedal_location"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Injury body area flags: ",(0,c.jsx)(i.code,{children:"area_00_i"})," \u2026 ",(0,c.jsx)(i.code,{children:"area_12_i"})," (Y/N series from SR1050 form indicating injury zones; see SR1050 manual for code meanings)."]}),"\n",(0,c.jsxs)(i.li,{children:["Pipeline metadata: ",(0,c.jsx)(i.code,{children:"created_at"}),", ",(0,c.jsx)(i.code,{children:"updated_at"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(i.h3,{id:"vehicles-publiccrash_vehicles",children:["Vehicles (",(0,c.jsx)(i.code,{children:"public.crash_vehicles"}),")"]}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Primary key:"})," ",(0,c.jsx)(i.code,{children:"crash_unit_id"})]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Foreign key:"})," ",(0,c.jsx)(i.code,{children:"crash_record_id"})," \u2192 ",(0,c.jsx)(i.code,{children:"crashes.crash_record_id"})]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Indexes:"})," ",(0,c.jsx)(i.code,{children:"vehicle_type"}),", ",(0,c.jsx)(i.code,{children:"vehicle_year"}),", ",(0,c.jsx)(i.code,{children:"make"}),", ",(0,c.jsx)(i.code,{children:"crash_record_id"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Common unit types:"})," DRIVER, PARKED, BICYCLE, PEDESTRIAN, DRIVERLESS, NON-MOTOR VEHICLE."]}),"\n"]}),"\n",(0,c.jsx)(i.p,{children:(0,c.jsx)(i.strong,{children:"Key analytic fields"})}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:["Unit descriptors: ",(0,c.jsx)(i.code,{children:"unit_no"}),", ",(0,c.jsx)(i.code,{children:"unit_type"}),", ",(0,c.jsx)(i.code,{children:"vehicle_use"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Vehicle identity: ",(0,c.jsx)(i.code,{children:"vehicle_id"}),", ",(0,c.jsx)(i.code,{children:"make"}),", ",(0,c.jsx)(i.code,{children:"model"}),", ",(0,c.jsx)(i.code,{children:"vehicle_year"}),", ",(0,c.jsx)(i.code,{children:"lic_plate_state"}),", ",(0,c.jsx)(i.code,{children:"cmv_id"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Occupancy & maneuvering: ",(0,c.jsx)(i.code,{children:"num_passengers"}),", ",(0,c.jsx)(i.code,{children:"occupant_cnt"}),", ",(0,c.jsx)(i.code,{children:"travel_direction"}),", ",(0,c.jsx)(i.code,{children:"maneuver"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Incident flags: ",(0,c.jsx)(i.code,{children:"towed_i"}),", ",(0,c.jsx)(i.code,{children:"fire_i"}),", ",(0,c.jsx)(i.code,{children:"hazmat_placard_i"}),", ",(0,c.jsx)(i.code,{children:"hazmat_present_i"}),", ",(0,c.jsx)(i.code,{children:"hazmat_name"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Damage details: ",(0,c.jsx)(i.code,{children:"first_contact_point"}),", ",(0,c.jsx)(i.code,{children:"vehicle_defect"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:["Pipeline metadata: ",(0,c.jsx)(i.code,{children:"created_at"}),", ",(0,c.jsx)(i.code,{children:"updated_at"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(i.h3,{id:"vision-zero-fatalities-publicvision_zero_fatalities",children:["Vision Zero Fatalities (",(0,c.jsx)(i.code,{children:"public.vision_zero_fatalities"}),")"]}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Primary key:"})," ",(0,c.jsx)(i.code,{children:"person_id"})," (links to ",(0,c.jsx)(i.code,{children:"crash_people.person_id"})," where available)"]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Indexes:"})," ",(0,c.jsx)(i.code,{children:"crash_date"}),", ",(0,c.jsx)(i.code,{children:"victim"}),", ",(0,c.jsx)(i.code,{children:"rd_no"}),", ",(0,c.jsx)(i.code,{children:"GIST(geometry)"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Refresh cadence:"})," Mirrors the Vision Zero scheduled job window configured in ",(0,c.jsx)(i.code,{children:"scheduled_jobs"}),"."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Victim categories:"})," PEDESTRIAN, DRIVER, BICYCLIST, PASSENGER, and other roles defined in the source dataset."]}),"\n"]}),"\n",(0,c.jsx)(i.p,{children:(0,c.jsx)(i.strong,{children:"Key analytic fields"})}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:["Case identifiers: ",(0,c.jsx)(i.code,{children:"person_id"}),", ",(0,c.jsx)(i.code,{children:"rd_no"})," (Chicago Police RD number reinstated by pipeline)."]}),"\n",(0,c.jsxs)(i.li,{children:["Narrative fields: ",(0,c.jsx)(i.code,{children:"crash_location"}),", ",(0,c.jsx)(i.code,{children:"crash_circumstances"}),", ",(0,c.jsx)(i.code,{children:"victim"})," role."]}),"\n",(0,c.jsxs)(i.li,{children:["Spatial: ",(0,c.jsx)(i.code,{children:"longitude"}),", ",(0,c.jsx)(i.code,{children:"latitude"}),", ",(0,c.jsx)(i.code,{children:"geometry"})," for mapping."]}),"\n",(0,c.jsxs)(i.li,{children:["Pipeline metadata: ",(0,c.jsx)(i.code,{children:"created_at"}),", ",(0,c.jsx)(i.code,{children:"updated_at"}),"."]}),"\n"]}),"\n",(0,c.jsx)(i.h2,{id:"spatial-reference-tables",children:"Spatial Reference Tables"}),"\n",(0,c.jsxs)(i.table,{children:[(0,c.jsx)(i.thead,{children:(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.th,{children:"Table"}),(0,c.jsx)(i.th,{children:"Geometry"}),(0,c.jsx)(i.th,{children:"Purpose"})]})}),(0,c.jsxs)(i.tbody,{children:[(0,c.jsxs)(i.tr,{children:[(0,c.jsxs)(i.td,{children:[(0,c.jsx)(i.code,{children:"wards"}),", ",(0,c.jsx)(i.code,{children:"community_areas"}),", ",(0,c.jsx)(i.code,{children:"census_tracts"}),", ",(0,c.jsx)(i.code,{children:"police_beats"}),", ",(0,c.jsx)(i.code,{children:"house_districts"}),", ",(0,c.jsx)(i.code,{children:"senate_districts"})]}),(0,c.jsx)(i.td,{children:"Polygon"}),(0,c.jsx)(i.td,{children:"Pre-loaded shapefile boundaries for common joins."})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"spatial_layers"})}),(0,c.jsx)(i.td,{children:"\u2014"}),(0,c.jsxs)(i.td,{children:["Registry of uploaded shapefiles. Fields: ",(0,c.jsx)(i.code,{children:"name"}),", ",(0,c.jsx)(i.code,{children:"slug"}),", ",(0,c.jsx)(i.code,{children:"geometry_type"}),", ",(0,c.jsx)(i.code,{children:"srid"}),", ",(0,c.jsx)(i.code,{children:"feature_count"}),", ",(0,c.jsx)(i.code,{children:"is_active"}),"."]})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"spatial_layer_features"})}),(0,c.jsxs)(i.td,{children:["Geometry (",(0,c.jsx)(i.code,{children:"mixed"}),")"]}),(0,c.jsxs)(i.td,{children:["Stores features for dynamic layers with ",(0,c.jsx)(i.code,{children:"properties"})," JSON payloads."]})]})]})]}),"\n",(0,c.jsxs)(i.p,{children:["All spatial layers use SRID 4326 to match crash geometry. Use spatial indices (",(0,c.jsx)(i.code,{children:"GIST"}),") plus ",(0,c.jsx)(i.code,{children:"ST_Intersects"}),"/",(0,c.jsx)(i.code,{children:"ST_Within"})," for performant boundary joins."]}),"\n",(0,c.jsx)(i.h2,{id:"operational-tables",children:"Operational Tables"}),"\n",(0,c.jsxs)(i.table,{children:[(0,c.jsx)(i.thead,{children:(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.th,{children:"Table"}),(0,c.jsx)(i.th,{children:"Purpose"})]})}),(0,c.jsxs)(i.tbody,{children:[(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"scheduled_jobs"})}),(0,c.jsxs)(i.td,{children:["Defines ETL jobs (",(0,c.jsx)(i.code,{children:"name"}),", ",(0,c.jsx)(i.code,{children:"job_type"}),", ",(0,c.jsx)(i.code,{children:"recurrence_type"}),", cron, retry policy)."]})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"job_executions"})}),(0,c.jsxs)(i.td,{children:["Execution log with ",(0,c.jsx)(i.code,{children:"records_processed"}),", ",(0,c.jsx)(i.code,{children:"records_inserted"}),", and ",(0,c.jsx)(i.code,{children:"duration_seconds"}),". Join to ",(0,c.jsx)(i.code,{children:"scheduled_jobs"})," on ",(0,c.jsx)(i.code,{children:"job_id"})," for run metadata."]})]}),(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"data_deletion_logs"})}),(0,c.jsx)(i.td,{children:"Audits purge operations initiated by retention tooling."})]})]})]}),"\n",(0,c.jsx)(i.p,{children:"Recent job history (sample):"}),"\n",(0,c.jsx)(i.pre,{children:(0,c.jsx)(i.code,{className:"language-sql",children:"SELECT e.execution_id,\n       s.name,\n       s.job_type,\n       e.status,\n       e.started_at,\n       e.completed_at,\n       e.records_processed\nFROM job_executions e\nJOIN scheduled_jobs s ON s.id = e.job_id\nORDER BY e.started_at DESC\nLIMIT 5;\n"})}),"\n",(0,c.jsx)(i.h2,{id:"example-queries",children:"Example Queries"}),"\n",(0,c.jsx)(i.pre,{children:(0,c.jsx)(i.code,{className:"language-sql",children:"-- Crash with people and vehicle occupant rollup\nSELECT c.crash_record_id,\n       c.crash_date,\n       c.prim_contributory_cause,\n       v.vehicle_id,\n       v.unit_type,\n       jsonb_agg(jsonb_build_object(\n         'person_id', p.person_id,\n         'person_type', p.person_type,\n         'injury', p.injury_classification\n       ) ORDER BY p.person_type) AS occupants\nFROM crashes c\nJOIN crash_vehicles v ON v.crash_record_id = c.crash_record_id\nLEFT JOIN crash_people p ON p.vehicle_id = v.vehicle_id\nWHERE c.crash_date >= CURRENT_DATE - INTERVAL '30 days'\nGROUP BY c.crash_record_id, c.crash_date, c.prim_contributory_cause, v.vehicle_id, v.unit_type;\n"})}),"\n",(0,c.jsx)(i.pre,{children:(0,c.jsx)(i.code,{className:"language-sql",children:"-- Fatal crashes with mapped geometry\nSELECT vz.person_id,\n       vz.victim,\n       vz.crash_date,\n       c.crash_record_id,\n       ST_AsGeoJSON(vz.geometry) AS geom\nFROM vision_zero_fatalities vz\nLEFT JOIN crash_people p ON p.person_id = vz.person_id\nLEFT JOIN crashes c ON c.crash_record_id = p.crash_record_id\nWHERE vz.crash_date >= CURRENT_DATE - INTERVAL '180 days';\n"})}),"\n",(0,c.jsx)(i.pre,{children:(0,c.jsx)(i.code,{className:"language-sql",children:"-- Hotspots by police beat using spatial join\nSELECT b.beat,\n       COUNT(*) AS crash_count\nFROM crashes c\nJOIN police_beats b\n  ON ST_Within(c.geometry, b.geom)\nGROUP BY b.beat\nORDER BY crash_count DESC\nLIMIT 10;\n"})}),"\n",(0,c.jsx)(i.h2,{id:"data-quality-notes",children:"Data Quality Notes"}),"\n",(0,c.jsxs)(i.ul,{children:["\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Temporal coverage:"})," Incremental jobs refresh recent windows as defined in ",(0,c.jsx)(i.code,{children:"scheduled_jobs"}),"; run the ",(0,c.jsx)(i.code,{children:"initial-load"})," CLI task for a full-history backfill."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Coordinate accuracy:"})," Records without lat/long cannot be spatially joined; the pipeline skips geometry creation when either coordinate is null."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"RD numbers:"})," ",(0,c.jsx)(i.code,{children:"vision_zero_fatalities.rd_no"})," is retained internally even though the public portal removes it; treat as sensitive and avoid exposing externally."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Null crash dates in people data:"})," Use the parent crash timestamp instead of ",(0,c.jsx)(i.code,{children:"crash_people.crash_date"})," when building timelines."]}),"\n",(0,c.jsxs)(i.li,{children:[(0,c.jsx)(i.strong,{children:"Amended reports:"})," Records can be updated post-ingestion; rely on ",(0,c.jsx)(i.code,{children:"updated_at"})," to detect changes during CDC-style processes."]}),"\n"]}),"\n",(0,c.jsx)(i.h2,{id:"usage-recommendations",children:"Usage Recommendations"}),"\n",(0,c.jsxs)(i.ol,{children:["\n",(0,c.jsxs)(i.li,{children:["Join on ",(0,c.jsx)(i.code,{children:"crashes.crash_record_id"})," for core relationships; use ",(0,c.jsx)(i.code,{children:"crash_people.vehicle_id"})," when you need occupant-to-unit linkage."]}),"\n",(0,c.jsxs)(i.li,{children:["Filter by ",(0,c.jsx)(i.code,{children:"unit_type"}),"/",(0,c.jsx)(i.code,{children:"person_type"})," to differentiate between motor vehicles, pedestrians, cyclists, and parked units."]}),"\n",(0,c.jsxs)(i.li,{children:["Prefer geometry-based joins (",(0,c.jsx)(i.code,{children:"ST_Within"}),", ",(0,c.jsx)(i.code,{children:"ST_Intersects"}),") against boundary tables; fall back to lat/long only when PostGIS is unavailable."]}),"\n",(0,c.jsxs)(i.li,{children:["Track refresh status with ",(0,c.jsx)(i.code,{children:"job_executions"})," to confirm data recency before publishing derived dashboards."]}),"\n",(0,c.jsx)(i.li,{children:'When exporting, include the ETL validation window (e.g., "data through <YYYY-MM-DD>") to set expectations about coverage.'}),"\n"]}),"\n",(0,c.jsxs)(i.p,{children:["For deeper column-level descriptions, keep the historical ",(0,c.jsx)(i.a,{href:"https://data.cityofchicago.org/browse?q=Traffic%20Crashes",children:"data portal documentation"})," handy; the warehouse mirrors those definitions while adding spatial and operational metadata."]})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,c.jsx)(i,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>r,x:()=>l});var n=s(6540);const c={},d=n.createContext(c);function r(e){const i=n.useContext(d);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),n.createElement(d.Provider,{value:i},e.children)}}}]);