"use strict";(self.webpackChunkchicago_crashes_pipeline_docs=self.webpackChunkchicago_crashes_pipeline_docs||[]).push([[442],{2377:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"development/contributing","title":"Contributing","description":"Workflow and guidelines for contributing enhancements or fixes.","source":"@site/docs/development/contributing.md","sourceDirName":"development","slug":"/development/contributing","permalink":"/documentation/development/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/MisterClean/chicago-crashes-pipeline/tree/main/docs/development/contributing.md","tags":[],"version":"current","lastUpdatedAt":null,"sidebarPosition":3,"frontMatter":{"title":"Contributing","sidebar_position":3,"description":"Workflow and guidelines for contributing enhancements or fixes."},"sidebar":"guideSidebar","previous":{"title":"Testing & Quality","permalink":"/documentation/development/testing"}}');var t=i(4848),o=i(8453);const r={title:"Contributing",sidebar_position:3,description:"Workflow and guidelines for contributing enhancements or fixes."},l=void 0,c={},a=[{value:"Branching &amp; Commits",id:"branching--commits",level:2},{value:"Pull Request Checklist",id:"pull-request-checklist",level:2},{value:"Code Review Expectations",id:"code-review-expectations",level:2},{value:"Releasing Changes",id:"releasing-changes",level:2},{value:"Documentation Contributions",id:"documentation-contributions",level:2},{value:"Community Standards",id:"community-standards",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"We welcome contributions that improve data quality, stability, and documentation. Follow these guidelines to streamline reviews."}),"\n",(0,t.jsx)(n.h2,{id:"branching--commits",children:"Branching & Commits"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a descriptive branch: ",(0,t.jsx)(n.code,{children:"git checkout -b feature/<topic>"})," or ",(0,t.jsx)(n.code,{children:"fix/<bug>"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Keep commits focused; prefer multiple small commits over monolithic changes."}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.a,{href:"https://www.conventionalcommits.org/",children:"Conventional Commits"})," where practical (",(0,t.jsx)(n.code,{children:"feat:"}),", ",(0,t.jsx)(n.code,{children:"fix:"}),", ",(0,t.jsx)(n.code,{children:"docs:"}),", ",(0,t.jsx)(n.code,{children:"chore:"}),")."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pull-request-checklist",children:"Pull Request Checklist"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Tests added or updated (",(0,t.jsx)(n.code,{children:"pytest"})," passes locally)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Linters clean (",(0,t.jsx)(n.code,{children:"make lint"}),")"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Documentation updated (Docusaurus ",(0,t.jsx)(n.code,{children:"npm run build"})," succeeds)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Screenshots or recordings attached for UI changes (admin portal, docs site)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Links included to relevant issue numbers"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"code-review-expectations",children:"Code Review Expectations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Prioritise correctness, security, and maintainability over premature optimisation."}),"\n",(0,t.jsx)(n.li,{children:"Respond to reviewer comments promptly; mark threads as resolved only when the issue is addressed."}),"\n",(0,t.jsx)(n.li,{children:"Be explicit about assumptions or follow-up work. If a fix is temporary, add TODOs referencing an issue."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"releasing-changes",children:"Releasing Changes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["After merging to ",(0,t.jsx)(n.code,{children:"main"}),", bump any relevant version identifiers (API ",(0,t.jsx)(n.code,{children:"version"}),", Docker tags, etc.)."]}),"\n",(0,t.jsx)(n.li,{children:"Publish release notes summarising user-facing changes and migrations."}),"\n",(0,t.jsx)(n.li,{children:"Deploy to staging first, verify health checks, then roll out to production."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"documentation-contributions",children:"Documentation Contributions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Source lives in ",(0,t.jsx)(n.code,{children:"docs/"})," and is built with Docusaurus 3."]}),"\n",(0,t.jsxs)(n.li,{children:["Preview changes locally:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install\nnpm run start\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"npm run build"})," before submitting to ensure the static site compiles without errors."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"community-standards",children:"Community Standards"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Follow the project's Code of Conduct (TBD \u2013 align with Contributor Covenant if adopted)."}),"\n",(0,t.jsx)(n.li,{children:"Respect rate limits when testing against the live SODA API; prefer fixtures and recorded responses."}),"\n",(0,t.jsx)(n.li,{children:"Keep sensitive data (API tokens, personal information) out of commits."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Thank you for helping improve the Chicago Crash Data Pipeline!"})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);