"use strict";(self.webpackChunkchicago_crashes_pipeline_docs=self.webpackChunkchicago_crashes_pipeline_docs||[]).push([[67],{2497:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"user-guides/api-reference","title":"API Reference","description":"REST endpoints exposed by the Chicago Crash Data Pipeline FastAPI service.","source":"@site/docs/user-guides/api-reference.md","sourceDirName":"user-guides","slug":"/user-guides/api-reference","permalink":"/documentation/user-guides/api-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/MisterClean/chicago-crashes-pipeline/tree/main/docs/user-guides/api-reference.md","tags":[],"version":"current","lastUpdatedAt":null,"sidebarPosition":2,"frontMatter":{"title":"API Reference","sidebar_position":2,"description":"REST endpoints exposed by the Chicago Crash Data Pipeline FastAPI service."},"sidebar":"guideSidebar","previous":{"title":"Admin Portal","permalink":"/documentation/user-guides/admin-portal"},"next":{"title":"Sync Operations","permalink":"/documentation/user-guides/sync-operations"}}');var d=i(4848),t=i(8453);const a={title:"API Reference",sidebar_position:2,description:"REST endpoints exposed by the Chicago Crash Data Pipeline FastAPI service."},l=void 0,c={},o=[{value:"Conventions",id:"conventions",level:2},{value:"Health &amp; Metadata",id:"health--metadata",level:2},{value:"<code>GET /</code>",id:"get-",level:3},{value:"<code>GET /health</code>",id:"get-health",level:3},{value:"<code>GET /version</code>",id:"get-version",level:3},{value:"Sync Operations (<code>/sync</code>)",id:"sync-operations-sync",level:2},{value:"<code>GET /sync/status</code>",id:"get-syncstatus",level:3},{value:"<code>POST /sync/trigger</code>",id:"post-synctrigger",level:3},{value:"<code>POST /sync/test</code>",id:"post-synctest",level:3},{value:"<code>GET /sync/endpoints</code>",id:"get-syncendpoints",level:3},{value:"<code>GET /sync/counts</code>",id:"get-synccounts",level:3},{value:"Data Validation (<code>/validate</code>)",id:"data-validation-validate",level:2},{value:"<code>GET /validate/</code>",id:"get-validate",level:3},{value:"<code>GET /validate/{endpoint}?limit=100</code>",id:"get-validateendpointlimit100",level:3},{value:"Job Management (<code>/jobs</code>)",id:"job-management-jobs",level:2},{value:"<code>GET /jobs/</code>",id:"get-jobs",level:3},{value:"<code>GET /jobs/summary</code>",id:"get-jobssummary",level:3},{value:"<code>GET /jobs/types</code>",id:"get-jobstypes",level:3},{value:"<code>POST /jobs/</code>",id:"post-jobs",level:3},{value:"<code>PUT /jobs/{id}</code>",id:"put-jobsid",level:3},{value:"<code>DELETE /jobs/{id}</code>",id:"delete-jobsid",level:3},{value:"<code>POST /jobs/{id}/execute</code>",id:"post-jobsidexecute",level:3},{value:"<code>GET /jobs/{id}/executions</code>",id:"get-jobsidexecutions",level:3},{value:"<code>GET /jobs/executions/recent?limit=10</code>",id:"get-jobsexecutionsrecentlimit10",level:3},{value:"<code>GET /jobs/executions/{execution_id}</code>",id:"get-jobsexecutionsexecution_id",level:3},{value:"<code>POST /jobs/data/delete</code>",id:"post-jobsdatadelete",level:3},{value:"Spatial APIs (<code>/spatial</code>)",id:"spatial-apis-spatial",level:2},{value:"<code>GET /spatial/</code>",id:"get-spatial",level:3},{value:"<code>GET /spatial/tables</code>",id:"get-spatialtables",level:3},{value:"<code>GET /spatial/tables/{table}?limit=10</code>",id:"get-spatialtablestablelimit10",level:3},{value:"<code>POST /spatial/load?directory=data/shapefiles</code>",id:"post-spatialloaddirectorydatashapefiles",level:3},{value:"<code>GET /spatial/layers</code>",id:"get-spatiallayers",level:3},{value:"<code>POST /spatial/layers</code>",id:"post-spatiallayers",level:3},{value:"<code>PATCH /spatial/layers/{layer_id}</code>",id:"patch-spatiallayerslayer_id",level:3},{value:"<code>POST /spatial/layers/{layer_id}/replace</code>",id:"post-spatiallayerslayer_idreplace",level:3},{value:"<code>DELETE /spatial/layers/{layer_id}</code>",id:"delete-spatiallayerslayer_id",level:3},{value:"OpenAPI &amp; Docs",id:"openapi--docs",level:2}];function r(e){const s={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(s.p,{children:["All endpoints are served from the FastAPI application (default ",(0,d.jsx)(s.code,{children:"http://localhost:8000"}),"). Authentication is not enforced by default; secure deployments should add an API gateway or middleware."]}),"\n",(0,d.jsx)(s.h2,{id:"conventions",children:"Conventions"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["JSON request/response bodies follow the Pydantic models defined in ",(0,d.jsx)(s.code,{children:"src/api/models.py"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:["Date values use ISO 8601 strings (",(0,d.jsx)(s.code,{children:"YYYY-MM-DD"})," or full timestamps with timezone)."]}),"\n",(0,d.jsxs)(s.li,{children:["Error responses include a ",(0,d.jsx)(s.code,{children:"detail"})," string and HTTP status code."]}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"health--metadata",children:"Health & Metadata"}),"\n",(0,d.jsx)(s.h3,{id:"get-",children:(0,d.jsx)(s.code,{children:"GET /"})}),"\n",(0,d.jsx)(s.p,{children:"Summary of service status, available endpoints, and runtime uptime."}),"\n",(0,d.jsx)(s.h3,{id:"get-health",children:(0,d.jsx)(s.code,{children:"GET /health"})}),"\n",(0,d.jsxs)(s.p,{children:["Performs configuration, SODA API, and database checks. Returns ",(0,d.jsx)(s.code,{children:"status"})," (",(0,d.jsx)(s.code,{children:"healthy"})," or ",(0,d.jsx)(s.code,{children:"degraded"}),") with per-service details."]}),"\n",(0,d.jsx)(s.h3,{id:"get-version",children:(0,d.jsx)(s.code,{children:"GET /version"})}),"\n",(0,d.jsx)(s.p,{children:"Build metadata: API version, Python runtime, and pinned dependency versions."}),"\n",(0,d.jsxs)(s.h2,{id:"sync-operations-sync",children:["Sync Operations (",(0,d.jsx)(s.code,{children:"/sync"}),")"]}),"\n",(0,d.jsx)(s.h3,{id:"get-syncstatus",children:(0,d.jsx)(s.code,{children:"GET /sync/status"})}),"\n",(0,d.jsx)(s.p,{children:"Current sync state including last run timestamps, active operation label, stats, and uptime."}),"\n",(0,d.jsx)(s.h3,{id:"post-synctrigger",children:(0,d.jsx)(s.code,{children:"POST /sync/trigger"})}),"\n",(0,d.jsx)(s.p,{children:"Start a manual sync in the background."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-json",children:'{\n  "endpoints": ["crashes", "people"],\n  "start_date": "2024-01-01",\n  "end_date": "2024-02-01",\n  "force": false,\n  "batch_size": 50000\n}\n'})}),"\n",(0,d.jsxs)(s.p,{children:["Returns a ",(0,d.jsx)(s.code,{children:"sync_id"})," and ",(0,d.jsx)(s.code,{children:"status"})," (",(0,d.jsx)(s.code,{children:"running"})," or ",(0,d.jsx)(s.code,{children:"queued"}),")."]}),"\n",(0,d.jsx)(s.h3,{id:"post-synctest",children:(0,d.jsx)(s.code,{children:"POST /sync/test"})}),"\n",(0,d.jsx)(s.p,{children:"Fetches a small sample (default 5 records) and runs through sanitisation to confirm SODA connectivity."}),"\n",(0,d.jsx)(s.h3,{id:"get-syncendpoints",children:(0,d.jsx)(s.code,{children:"GET /sync/endpoints"})}),"\n",(0,d.jsx)(s.p,{children:"Metadata about configured SODA endpoints and their descriptions."}),"\n",(0,d.jsx)(s.h3,{id:"get-synccounts",children:(0,d.jsx)(s.code,{children:"GET /sync/counts"})}),"\n",(0,d.jsx)(s.p,{children:"Aggregated record counts from the database for quick verification after syncs."}),"\n",(0,d.jsxs)(s.h2,{id:"data-validation-validate",children:["Data Validation (",(0,d.jsx)(s.code,{children:"/validate"}),")"]}),"\n",(0,d.jsx)(s.h3,{id:"get-validate",children:(0,d.jsx)(s.code,{children:"GET /validate/"})}),"\n",(0,d.jsx)(s.p,{children:"Lists available endpoints, validation use cases, and default limits."}),"\n",(0,d.jsx)(s.h3,{id:"get-validateendpointlimit100",children:(0,d.jsx)(s.code,{children:"GET /validate/{endpoint}?limit=100"})}),"\n",(0,d.jsxs)(s.p,{children:["Validates up to 1,000 records for the specified endpoint (",(0,d.jsx)(s.code,{children:"crashes"}),", ",(0,d.jsx)(s.code,{children:"people"}),", ",(0,d.jsx)(s.code,{children:"vehicles"}),", ",(0,d.jsx)(s.code,{children:"fatalities"}),"). Response includes counts for valid/invalid records and lists of validation errors/warnings."]}),"\n",(0,d.jsxs)(s.h2,{id:"job-management-jobs",children:["Job Management (",(0,d.jsx)(s.code,{children:"/jobs"}),")"]}),"\n",(0,d.jsx)(s.h3,{id:"get-jobs",children:(0,d.jsx)(s.code,{children:"GET /jobs/"})}),"\n",(0,d.jsxs)(s.p,{children:["Returns all scheduled jobs. Use the ",(0,d.jsx)(s.code,{children:"enabled_only"})," query param (",(0,d.jsx)(s.code,{children:"true"}),"/",(0,d.jsx)(s.code,{children:"false"}),") to filter."]}),"\n",(0,d.jsx)(s.h3,{id:"get-jobssummary",children:(0,d.jsx)(s.code,{children:"GET /jobs/summary"})}),"\n",(0,d.jsx)(s.p,{children:"Aggregate metrics (total jobs, active jobs, running jobs, failures in the last 24 hours)."}),"\n",(0,d.jsx)(s.h3,{id:"get-jobstypes",children:(0,d.jsx)(s.code,{children:"GET /jobs/types"})}),"\n",(0,d.jsx)(s.p,{children:"Lists job templates and endpoint presets defined in the application."}),"\n",(0,d.jsx)(s.h3,{id:"post-jobs",children:(0,d.jsx)(s.code,{children:"POST /jobs/"})}),"\n",(0,d.jsxs)(s.p,{children:["Create a job. Request matches ",(0,d.jsx)(s.code,{children:"CreateJobRequest"}),":"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-json",children:'{\n  "name": "Last 30 Days - Vehicles",\n  "description": "Daily vehicles refresh",\n  "job_type": "last_30_days_vehicles",\n  "enabled": true,\n  "recurrence_type": "daily",\n  "config": {\n    "endpoints": ["vehicles"],\n    "window_days": 30\n  },\n  "timeout_minutes": 60,\n  "max_retries": 3,\n  "retry_delay_minutes": 5\n}\n'})}),"\n",(0,d.jsx)(s.h3,{id:"put-jobsid",children:(0,d.jsx)(s.code,{children:"PUT /jobs/{id}"})}),"\n",(0,d.jsx)(s.p,{children:"Update job configuration. Partial updates are supported through the admin portal UI."}),"\n",(0,d.jsx)(s.h3,{id:"delete-jobsid",children:(0,d.jsx)(s.code,{children:"DELETE /jobs/{id}"})}),"\n",(0,d.jsx)(s.p,{children:"Remove a job and its execution history."}),"\n",(0,d.jsx)(s.h3,{id:"post-jobsidexecute",children:(0,d.jsx)(s.code,{children:"POST /jobs/{id}/execute"})}),"\n",(0,d.jsxs)(s.p,{children:["Immediately enqueue a job. Optionally supply ",(0,d.jsx)(s.code,{children:'{ "force": true }'})," to bypass concurrency checks."]}),"\n",(0,d.jsx)(s.h3,{id:"get-jobsidexecutions",children:(0,d.jsx)(s.code,{children:"GET /jobs/{id}/executions"})}),"\n",(0,d.jsx)(s.p,{children:"Execution history for a specific job (most recent first)."}),"\n",(0,d.jsx)(s.h3,{id:"get-jobsexecutionsrecentlimit10",children:(0,d.jsx)(s.code,{children:"GET /jobs/executions/recent?limit=10"})}),"\n",(0,d.jsx)(s.p,{children:"Global recent activity feed used by the admin dashboard."}),"\n",(0,d.jsx)(s.h3,{id:"get-jobsexecutionsexecution_id",children:(0,d.jsx)(s.code,{children:"GET /jobs/executions/{execution_id}"})}),"\n",(0,d.jsx)(s.p,{children:"Detailed execution data: timestamps, record counts, error messages, structured log entries."}),"\n",(0,d.jsx)(s.h3,{id:"post-jobsdatadelete",children:(0,d.jsx)(s.code,{children:"POST /jobs/data/delete"})}),"\n",(0,d.jsx)(s.p,{children:"Delete records from a table with optional date bounds."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-json",children:'{\n  "table_name": "crashes",\n  "start_date": "2020-01-01",\n  "end_date": "2020-12-31",\n  "reason": "Purge duplicated backfill"\n}\n'})}),"\n",(0,d.jsxs)(s.p,{children:["Successful responses include a ",(0,d.jsx)(s.code,{children:"deletion_id"})," and summary counts. Deletions are logged in ",(0,d.jsx)(s.code,{children:"data_deletion_logs"}),"."]}),"\n",(0,d.jsxs)(s.h2,{id:"spatial-apis-spatial",children:["Spatial APIs (",(0,d.jsx)(s.code,{children:"/spatial"}),")"]}),"\n",(0,d.jsx)(s.h3,{id:"get-spatial",children:(0,d.jsx)(s.code,{children:"GET /spatial/"})}),"\n",(0,d.jsx)(s.p,{children:"Documentation for spatial endpoints including usage examples."}),"\n",(0,d.jsx)(s.h3,{id:"get-spatialtables",children:(0,d.jsx)(s.code,{children:"GET /spatial/tables"})}),"\n",(0,d.jsx)(s.p,{children:"Lists shapefile-derived tables currently loaded in PostGIS (requires GeoPandas dependencies)."}),"\n",(0,d.jsx)(s.h3,{id:"get-spatialtablestablelimit10",children:(0,d.jsx)(s.code,{children:"GET /spatial/tables/{table}?limit=10"})}),"\n",(0,d.jsx)(s.p,{children:"Returns schema metadata and a sample of records for a spatial table."}),"\n",(0,d.jsx)(s.h3,{id:"post-spatialloaddirectorydatashapefiles",children:(0,d.jsx)(s.code,{children:"POST /spatial/load?directory=data/shapefiles"})}),"\n",(0,d.jsx)(s.p,{children:"Bulk load shapefiles residing in the target directory. Reports success/failure per file."}),"\n",(0,d.jsx)(s.h3,{id:"get-spatiallayers",children:(0,d.jsx)(s.code,{children:"GET /spatial/layers"})}),"\n",(0,d.jsxs)(s.p,{children:["List custom GeoJSON layers managed by the ",(0,d.jsx)(s.code,{children:"SpatialLayerService"}),"."]}),"\n",(0,d.jsx)(s.h3,{id:"post-spatiallayers",children:(0,d.jsx)(s.code,{children:"POST /spatial/layers"})}),"\n",(0,d.jsxs)(s.p,{children:["Upload a GeoJSON payload. Accepts multipart form data (",(0,d.jsx)(s.code,{children:"name"}),", ",(0,d.jsx)(s.code,{children:"file"}),", optional ",(0,d.jsx)(s.code,{children:"description"}),", ",(0,d.jsx)(s.code,{children:"srid"}),")."]}),"\n",(0,d.jsx)(s.h3,{id:"patch-spatiallayerslayer_id",children:(0,d.jsx)(s.code,{children:"PATCH /spatial/layers/{layer_id}"})}),"\n",(0,d.jsx)(s.p,{children:"Update metadata or activation state for an existing layer."}),"\n",(0,d.jsx)(s.h3,{id:"post-spatiallayerslayer_idreplace",children:(0,d.jsx)(s.code,{children:"POST /spatial/layers/{layer_id}/replace"})}),"\n",(0,d.jsx)(s.p,{children:"Replace the stored geometry with new GeoJSON content."}),"\n",(0,d.jsx)(s.h3,{id:"delete-spatiallayerslayer_id",children:(0,d.jsx)(s.code,{children:"DELETE /spatial/layers/{layer_id}"})}),"\n",(0,d.jsx)(s.p,{children:"Remove a layer entirely."}),"\n",(0,d.jsx)(s.h2,{id:"openapi--docs",children:"OpenAPI & Docs"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Swagger UI"}),": ",(0,d.jsx)(s.code,{children:"GET /docs"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"OpenAPI JSON"}),": ",(0,d.jsx)(s.code,{children:"GET /openapi.json"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"ReDoc"}),": ",(0,d.jsx)(s.code,{children:"GET /redoc"})]}),"\n"]}),"\n",(0,d.jsx)(s.p,{children:"Use these interactive docs to experiment with the API or generate client SDKs."})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(r,{...e})}):r(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>l});var n=i(6540);const d={},t=n.createContext(d);function a(e){const s=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:a(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);