"use strict";(self.webpackChunkchicago_crashes_pipeline_docs=self.webpackChunkchicago_crashes_pipeline_docs||[]).push([[248],{1144:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"user-guides/sync-operations","title":"Sync Operations","description":"Manage one-off and scheduled data synchronisation tasks.","source":"@site/docs/user-guides/sync-operations.md","sourceDirName":"user-guides","slug":"/user-guides/sync-operations","permalink":"/documentation/user-guides/sync-operations","draft":false,"unlisted":false,"editUrl":"https://github.com/MisterClean/chicago-crashes-pipeline/tree/main/docs/user-guides/sync-operations.md","tags":[],"version":"current","lastUpdatedAt":null,"sidebarPosition":3,"frontMatter":{"title":"Sync Operations","sidebar_position":3,"description":"Manage one-off and scheduled data synchronisation tasks."},"sidebar":"guideSidebar","previous":{"title":"API Reference","permalink":"/documentation/user-guides/api-reference"},"next":{"title":"System Overview","permalink":"/documentation/architecture/overview"}}');var t=s(4848),r=s(8453);const l={title:"Sync Operations",sidebar_position:3,description:"Manage one-off and scheduled data synchronisation tasks."},a=void 0,o={},d=[{value:"Default Jobs",id:"default-jobs",level:2},{value:"Manual Syncs via CLI",id:"manual-syncs-via-cli",level:2},{value:"Manual Syncs via API",id:"manual-syncs-via-api",level:2},{value:"Monitoring Progress",id:"monitoring-progress",level:2},{value:"Handling Failures",id:"handling-failures",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The pipeline ingests crash data through two primary channels: ",(0,t.jsx)(n.strong,{children:"scheduled jobs"})," stored in the database and ",(0,t.jsx)(n.strong,{children:"manual runs"})," triggered via the CLI or API. This guide explains the available job types, how scheduling works, and how to monitor progress."]}),"\n",(0,t.jsx)(n.h2,{id:"default-jobs",children:"Default Jobs"}),"\n",(0,t.jsxs)(n.p,{children:["On startup (",(0,t.jsx)(n.code,{children:"src/api/main.py"}),") the application seeds a set of jobs defined in ",(0,t.jsx)(n.code,{children:"src/models/jobs.py:get_default_jobs()"}),":"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Job Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Enabled"}),(0,t.jsx)(n.th,{children:"Recurrence"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"full_refresh"})}),(0,t.jsx)(n.td,{children:"Complete backfill across crashes, people, vehicles, fatalities"}),(0,t.jsx)(n.td,{children:"Disabled"}),(0,t.jsx)(n.td,{children:"Manual"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"last_30_days_crashes"})}),(0,t.jsx)(n.td,{children:"Rolling 30-day refresh for crash records"}),(0,t.jsx)(n.td,{children:"Enabled"}),(0,t.jsx)(n.td,{children:"Daily"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"last_30_days_people"})}),(0,t.jsx)(n.td,{children:"Rolling 30-day refresh for people data"}),(0,t.jsx)(n.td,{children:"Enabled"}),(0,t.jsx)(n.td,{children:"Daily"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"last_30_days_vehicles"})}),(0,t.jsx)(n.td,{children:"Rolling 30-day refresh for vehicle data"}),(0,t.jsx)(n.td,{children:"Enabled"}),(0,t.jsx)(n.td,{children:"Daily"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"last_6_months_fatalities"})}),(0,t.jsx)(n.td,{children:"Fatality refresh with a six-month window"}),(0,t.jsx)(n.td,{children:"Enabled"}),(0,t.jsx)(n.td,{children:"Weekly"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["Adjust these defaults by editing ",(0,t.jsx)(n.code,{children:"get_default_jobs()"})," or managing them from the admin portal."]}),"\n",(0,t.jsx)(n.h2,{id:"manual-syncs-via-cli",children:"Manual Syncs via CLI"}),"\n",(0,t.jsx)(n.p,{children:"The CLI wraps the same sync service used by the API. Run commands from the project root with your environment configured."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Historical backfill starting September 2017\npython -m src.cli.pipeline initial-load --start-date 2017-09-01\n\n# Rolling seven-day window (default) across all endpoints\npython -m src.cli.pipeline delta\n\n# Target specific endpoints with custom ranges\npython -m src.cli.pipeline delta \\\n  --endpoints crashes people \\\n  --start-date 2024-01-01 \\\n  --end-date 2024-01-31 \\\n  --batch-size 20000\n"})}),"\n",(0,t.jsxs)(n.p,{children:["CLI runs log progress to ",(0,t.jsx)(n.code,{children:"logs/etl.log"})," and update the shared job execution history so the admin portal reflects manual operations."]}),"\n",(0,t.jsx)(n.h2,{id:"manual-syncs-via-api",children:"Manual Syncs via API"}),"\n",(0,t.jsx)(n.p,{children:"Trigger one-off runs without the CLI:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8000/sync/trigger \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n        "endpoints": ["crashes"],\n        "start_date": "2024-02-01",\n        "end_date": "2024-02-15",\n        "force": true\n      }\'\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"GET /sync/status"})," to monitor state or poll the job executions list for completion."]}),"\n",(0,t.jsx)(n.h2,{id:"monitoring-progress",children:"Monitoring Progress"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Admin Portal"})," \u2013 displays running jobs, execution counts, errors, and duration charts."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Logs"})," \u2013 monitor ",(0,t.jsx)(n.code,{children:"logs/api.log"})," and ",(0,t.jsx)(n.code,{children:"logs/etl.log"})," (or container logs if using Docker)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Database"})," \u2013 inspect ",(0,t.jsx)(n.code,{children:"job_executions"})," and ",(0,t.jsx)(n.code,{children:"job_execution_logs"})," tables for historical data."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"handling-failures",children:"Handling Failures"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Review the execution modal or API response for stack traces."}),"\n",(0,t.jsxs)(n.li,{children:["Check the ETL log for the specific batch that failed (look for ",(0,t.jsx)(n.code,{children:"error"})," entries keyed by ",(0,t.jsx)(n.code,{children:"sync_id"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Restart the job with ",(0,t.jsx)(n.code,{children:"force=true"})," to bypass idempotency guards when safe."]}),"\n",(0,t.jsxs)(n.li,{children:["If data corruption occurred, use the ",(0,t.jsx)(n.a,{href:"/documentation/user-guides/admin-portal#data-management",children:"Data Management"})," tools to delete affected ranges before re-running."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep the default rolling jobs enabled to minimise the size of manual refreshes."}),"\n",(0,t.jsxs)(n.li,{children:["Use smaller ",(0,t.jsx)(n.code,{children:"batch_size"})," values during daytime hours to respect SODA API rate limits."]}),"\n",(0,t.jsxs)(n.li,{children:["Store your ",(0,t.jsx)(n.code,{children:"CHICAGO_API_TOKEN"})," in ",(0,t.jsx)(n.code,{children:".env"})," to unlock significantly higher throughput."]}),"\n",(0,t.jsx)(n.li,{children:"Schedule heavy backfills during off-peak hours to reduce contention with production workloads."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);